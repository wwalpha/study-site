DROP TABLE IF EXISTS sequence;
CREATE TABLE sequence (
    name VARCHAR(50) NOT NULL,
    current_value INT NOT NULL,
    increment INT NOT NULL DEFAULT 1,
    PRIMARY KEY (name)
) ENGINE=InnoDB;

DROP FUNCTION IF EXISTS currval;

CREATE FUNCTION currval (seq_name VARCHAR(50))
    RETURNS INTEGER
    LANGUAGE SQL
    DETERMINISTIC
    CONTAINS SQL
    SQL SECURITY DEFINER
    COMMENT ''
BEGIN
    DECLARE value INTEGER;
    SET value = 0;
    SELECT current_value INTO value
        FROM sequence
        WHERE name = seq_name;
    RETURN value;
END

DROP FUNCTION IF EXISTS nextval;
CREATE FUNCTION nextval (seq_name VARCHAR(50))
    RETURNS INTEGER
    LANGUAGE SQL
    DETERMINISTIC
    CONTAINS SQL
    SQL SECURITY DEFINER
    COMMENT ''
BEGIN
    UPDATE sequence
    SET current_value = current_value + increment
    WHERE name = seq_name;
    RETURN currval(seq_name);
END

DROP FUNCTION IF EXISTS setval;
CREATE FUNCTION setval (seq_name VARCHAR(50), value INTEGER)
    RETURNS INTEGER
    LANGUAGE SQL
    DETERMINISTIC
    CONTAINS SQL
    SQL SECURITY DEFINER
    COMMENT ''
BEGIN
    UPDATE sequence
    SET current_value = value
    WHERE name = seq_name;
    RETURN currval(seq_name);
END

INSERT INTO sequence VALUES ('WORDSEQ', 0, 1);

DROP FUNCTION IF EXISTS nextTime;
CREATE FUNCTION nextTime(userId VARCHAR(50), category VARCHAR(50), word VARCHAR(100), times INT)
    RETURNS DATETIME
    LANGUAGE SQL
    DETERMINISTIC
    CONTAINS SQL
    SQL SECURITY DEFINER
    COMMENT ''
BEGIN

	SELECT DAY_LIMIT INTO @dayLimit FROM USERS WHERE USER_ID = userId;
	SELECT DAY_DELAY INTO @dayDelay FROM TIMES WHERE USER_ID = userId AND TIMES = times;
   
	SET @count = 0;

	NEXT: LOOP
		SELECT
       	    COUNT(*)
      	 INTO
       	    @wordCount
       	FROM
       	    WORDS
       	WHERE
       	    USER_ID = userId
       	    AND CATEGORY = category
       	    AND WORD = word
		    AND NEXT_TIME = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL (@dayDelay + @count) DAY), '%Y%m%d')
       	INTO 
       
       	IF @wordCount < @dayLimit THEN
			BEGIN
	           UPDATE
	               WORDS
	           SET
	               NEXT_TIME = DATE_FORMAT(DATE_ADD(NOW(), INTERVAL (@dayDelay + @count) DAY), '%Y%m%d')
	           WHERE
	               USER_ID = userId
	               AND CATEGORY = category
	               AND WORD = word
	           
	           LEAVE NEXT;
	        END
       END IF;
       
       SET @count = @count + 1; 
   END LOOP NEXT;
END
